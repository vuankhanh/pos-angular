name: Deploy

on:
  push:
    branches:
      - staging

jobs:
  build-and-deploy:
    runs-on: [self-hosted, Linux, X64, staging]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build:staging
    
    - name: Remove old project directory if exists
      run: |
        PROJECT_NAME=$(node -p "require('./package.json').name")
        DEPLOY_DIR="/var/www/front-end/$PROJECT_NAME"
        if [ -d "$DEPLOY_DIR" ]; then
          rm -rf "$PROJECT_DIR"
        fi

    - name: Copy files to deployment directory
      run: |
        PROJECT_NAME=$(node -p "require('./package.json').name")
        DEPLOY_DIR="/var/www/front-end"
        mkdir -p $DEPLOY_DIR
        cp -r dist/$PROJECT_NAME $DEPLOY_DIR

    - name: Replace Nginx configuration
      run: |
        CONFIG_FILE="/etc/nginx/sites-available/pos-angular"
        if [ -f "$CONFIG_FILE" ]; then
          echo "${{ secrets.STAGING_VAK_TP550LA_SUDO_PASSWORD }}" | sudo -S rm "$CONFIG_FILE"
        fi
        echo "${{ secrets.STAGING_VAK_TP550LA_SUDO_PASSWORD }}" | sudo -S cp nginx/pos-angular "$CONFIG_FILE"
        echo "${{ secrets.STAGING_VAK_TP550LA_SUDO_PASSWORD }}" | sudo -S ln -sf "$CONFIG_FILE" /etc/nginx/sites-enabled/pos-angular

    - name: Reload Nginx
      run: echo "${{ secrets.STAGING_VAK_TP550LA_SUDO_PASSWORD }}" | sudo -S systemctl reload nginx